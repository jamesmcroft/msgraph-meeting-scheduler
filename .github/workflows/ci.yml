name: CI

on:
  push:
    tags:
      - v*
    branches:
      - main
    paths:
      - src/**
      - build/**
      - tests/**
      - .github/workflows/ci.yml
  pull_request:
    branches:
      - main
    paths:
      - src/**
      - build/**
      - tests/**
      - .github/workflows/ci.yml
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: func-graphscheduler-dev
  AZURE_FUNCTIONAPP_PACKAGE_PATH: src/GraphMeetingScheduler/.
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 7.0.x
  WORKING_DIRECTORY: src/GraphMeetingScheduler
  DOTNET_CORE_VERSION_INPROC: 6.0.x

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get Build Version
        run: |
          Import-Module .\build\GetBuildVersion.psm1
          Write-Host $Env:GITHUB_REF
          $version = GetBuildVersion -VersionString $Env:GITHUB_REF
          echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        shell: pwsh

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Setup .NET (for inproc extensions)
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION_INPROC }}

      - name: Restore
        run: dotnet restore "${{ env.WORKING_DIRECTORY }}"

      - name: Build
        run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} -p:Version=$BUILD_VERSION --no-restore

      - name: Publish
        if: startsWith(github.ref, 'refs/tags/v')
        run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"

      - name: Publish Artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v1.0.0
        with:
          name: functionapp
          path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: functionapp
          path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

      - name: Deploy to Azure Function App
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          publish-profile: ${{ secrets.func_graphscheduler_dev_AAD4 }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
